/* Builtins defined by library. */
__builtin__ float max(float, float);
__builtin__ vec2 max(vec2, vec2);
__builtin__ vec3 max(vec3, vec3);
__builtin__ vec4 max(vec4, vec4);
__builtin__ vec2 destCoord();
__builtin__ vec2 samplerCoord(sampler);
__builtin__ vec2 samplerTransform(sampler,vec2);
__builtin__ vec2 samplerOrigin(sampler);
__builtin__ vec2 samplerSize(sampler);
__builtin__ vec4 samplerExtend(sampler);
__builtin__ vec4 sample(sampler,vec2);
__builtin__ float sin(float);
__builtin__ vec2 sin(vec2);
__builtin__ vec3 sin(vec3);
__builtin__ vec4 sin(vec4);
__builtin__ float cos(float);
__builtin__ vec2 cos(vec2);
__builtin__ vec3 cos(vec3);
__builtin__ vec4 cos(vec4);
__builtin__ vec2 sincos(float);
__builtin__ vec2 cossin(float);
__builtin__ float dot(vec2,vec2);
__builtin__ float dot(vec3,vec3);
__builtin__ float dot(vec4,vec4);

/* Our actual kernel. */
kernel vec4 simpleKernel(sampler src)
{
  vec2 offset = sincos(dot(destCoord(), vec2(1,1)));
  __color outputColor = sample(src, samplerTransform(src, destCoord() + offset));
  return outputColor;
}

// vim:filetype=c
