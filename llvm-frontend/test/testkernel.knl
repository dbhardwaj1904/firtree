/* Builtins defined by library. */
__builtin__ float max(float, float);
__builtin__ vec2 max(vec2, vec2);
__builtin__ vec3 max(vec3, vec3);
__builtin__ vec4 max(vec4, vec4);
__builtin__ void putchar(int);
__builtin__ void putfloat(float);

/* Prototype for functions defined below. */
float increment(float a);
float increment(float a, float by);
vec2 increment(vec2 a);
vec2 increment(vec2 a, float by);

__builtin__ vec2 samplerCoord(sampler);
__builtin__ vec4 sample(sampler, vec2);

/* Our actual kernel. */
kernel vec4 simpleKernel(sampler src)
{
  vec3 no = vec3(0,0,1);
  float a = max(no.z, 3.0);
  float b = increment(a);
  vec2 c = max(vec2(3,b), vec2(1,1));
  return sample(src, samplerCoord(src)) + vec4(a,b,c);
}

float increment(float a)
{
  return a + 1;
}

float increment(float a, float by)
{
  return a + by;
}

vec2 increment(vec2 a)
{
  return a + vec2(1,1);
}

vec2 increment(vec2 a, float by)
{
  // Auto broadcast of vector/floating point operations.
  return a + by;
}

// vim:filetype=c
